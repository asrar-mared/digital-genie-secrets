# üßû‚Äç‚ôÇÔ∏è Digital Genie Secrets - Dockerfile
# Multi-stage build for optimized image size

# ============================================
# Stage 1: Builder
# ============================================
FROM python:3.11-slim as builder

# Set build arguments
ARG PYTHON_VERSION=3.11
ARG BUILD_DATE
ARG VERSION

LABEL maintainer="Digital Genie Team <dev@digital-genie.com>"
LABEL description="Digital Genie Secrets - Advanced Cybersecurity Platform"
LABEL version="${VERSION}"
LABEL build-date="${BUILD_DATE}"

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    POETRY_VERSION=1.7.1

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    libpq-dev \
    libssl-dev \
    libffi-dev \
    gcc \
    g++ \
    git \
    curl \
    wget \
    && rm -rf /var/lib/apt/lists/*

# Create virtual environment
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Copy requirements
WORKDIR /build
COPY requirements.txt .

# Install Python dependencies
RUN pip install --upgrade pip setuptools wheel && \
    pip install -r requirements.txt

# ============================================
# Stage 2: Runtime
# ============================================
FROM python:3.11-slim

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PATH="/opt/venv/bin:$PATH" \
    APP_HOME=/app

# Install runtime dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    libpq5 \
    curl \
    ca-certificates \
    nmap \
    tcpdump \
    tshark \
    netcat-openbsd \
    && rm -rf /var/lib/apt/lists/*

# Create app user for security (non-root)
RUN groupadd -r genie && \
    useradd -r -g genie -s /bin/bash -d /app genie

# Copy virtual environment from builder
COPY --from=builder /opt/venv /opt/venv

# Set working directory
WORKDIR ${APP_HOME}

# Create necessary directories
RUN mkdir -p \
    ${APP_HOME}/logs \
    ${APP_HOME}/data \
    ${APP_HOME}/uploads \
    ${APP_HOME}/config \
    ${APP_HOME}/ssl \
    ${APP_HOME}/temp && \
    chown -R genie:genie ${APP_HOME}

# Copy application code
COPY --chown=genie:genie . ${APP_HOME}/

# Install the application
RUN pip install -e .

# Security: Remove unnecessary files
RUN find . -type f -name "*.pyc" -delete && \
    find . -type d -name "__pycache__" -delete && \
    find . -type f -name "*.md" ! -name "README.md" -delete

# Health check script
COPY --chown=genie:genie docker/healthcheck.sh /usr/local/bin/healthcheck.sh
RUN chmod +x /usr/local/bin/healthcheck.sh

# Expose ports
EXPOSE 8443 8080

# Switch to non-root user
USER genie

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD /usr/local/bin/healthcheck.sh

# Default command
CMD ["python", "-m", "digital_genie.main"]

# ============================================
# Build Information
# ============================================
# Build: docker build -t digital-genie:latest .
# Run: docker run -d -p 8443:8443 digital-genie:latest
# ============================================
